# This workflow will build a Java project with Maven and cache dependencies to improve build speed.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

# Controls when the workflow will run.
on:
  # Triggers the workflow on push events but only for the "main" branch.
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull request events for the "main" branch.
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Sets up a Java JDK environment for use in actions.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Eclipse Temurin is a popular, open-source distribution of Java.
          cache: 'maven' # Caches Maven dependencies to speed up future builds.

      # Step 3: Builds the project and runs tests with Maven.
      # The -B flag runs Maven in non-interactive (batch) mode.
      - name: Build and test with Maven
        run: mvn -B verify --file pom.xml


